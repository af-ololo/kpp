class VisitsController < ApplicationController
  
  before_filter :authenticate_user!
  
  # GET /visits
  # GET /visits.json
  def index
    if params[:employee_id].nil?
      if admin_signed_in?
        @visits = Visit.all
      else
        @visits = Visit.where( :office_id => current_user.office.id )
      end
    else
      @visits = Visit.where( :employee_id => params[:employee_id])
    end

    @visit = Visit.new

    respond_to do |format|
      format.html # index.html.erb
      format.json { render json: @visits }
    end
  end

  # GET /visits/1
  # GET /visits/1.json
  def show
    @visit = Visit.find(params[:id])

    respond_to do |format|
      format.html # show.html.erb
      format.json { render json: @visit }
    end
  end

  # GET /visits/new
  # GET /visits/new.json
  def new
    @visit = Visit.new

    respond_to do |format|
      format.html # new.html.erb
      format.json { render json: @visit }
    end
  end

  # GET /visits/1/edit
  def edit
    @visit = Visit.find(params[:id])
  end

  # POST /visits
  # POST /visits.json
  def create
    @e = Employee.find_by_name(params[:visit][:employee]) ? Employee.find_by_name(params[:visit][:employee]) : Employee.create( :name => params[:visit][:employee] )
    @visit = current_user.office.visits.new( :employee => @e, :inout => params[:visit][:inout] )

    respond_to do |format|
      if @visit.save
        format.html { redirect_to visits_path, notice: 'Visit was successfully created.' }
        format.json { render json: @visit, status: :created, location: @visit }
      else
        format.html { render action: "new" }
        format.json { render json: @visit.errors, status: :unprocessable_entity }
      end
      format.js
    end
  end

  # DELETE /visits/1
  # DELETE /visits/1.json
  def destroy
    @id = params[:id]
    @visit = Visit.find(@id)
    @visit.destroy

    respond_to do |format|
      format.html { redirect_to visits_url }
      format.json { head :no_content }
      format.js
    end
  end
end
